exports.handler = async function(event, context) {
  if (event.httpMethod !== 'POST') {
    return {
      statusCode: 405,
      body: JSON.stringify({ error: 'Method Not Allowed' }),
    };
  }

  try {
    const { playerName, itemName } = JSON.parse(event.body || '{}');

    if (!playerName || !itemName) {
      return {
        statusCode: 400,
        body: JSON.stringify({ error: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏ playerName ‡πÅ‡∏•‡∏∞ itemName' }),
      };
    }

    // üî• ‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÑ‡∏õ‡∏ó‡∏µ‡πà Roblox ‡∏ú‡πà‡∏≤‡∏ô webhook
    const webhookUrl = 'https://your-roblox-api-webhook.url'; // <-- ‡πÉ‡∏™‡πà URL ‡∏à‡∏≤‡∏Å Roblox HttpService

    const axios = require('axios');
    await axios.post(webhookUrl, {
      playerName,
      itemName
    });

    return {
      statusCode: 200,
      body: JSON.stringify({
        message: `‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÄ‡∏™‡∏Å ${itemName} ‡πÉ‡∏´‡πâ ${playerName} ‡∏ñ‡∏π‡∏Å‡∏™‡πà‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á Roblox ‡πÅ‡∏•‡πâ‡∏ß`
      })
    };

  } catch (err) {
    console.error(err);
    return {
      statusCode: 500,
      body: JSON.stringify({ error: '‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå Netlify ‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤' }),
    };
  }
};
